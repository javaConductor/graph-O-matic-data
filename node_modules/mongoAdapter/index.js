/**
 * Created with JetBrains WebStorm.
 * User: lee
 * Date: 6/20/13
 * Time: 1:58 PM
 */

(function (model, extend) {

	//////  Relationship Category //////
	//////  Relationship Category //////
	this.saveRelationshipCategory = function(rcat, f){
		model.RelationshipTypeCategory.update({_id : rcat.id}, icat, {upsert: true},function(err,numAffected, rawResponse){
			return (err) ? f(err, null) : f(null, rawResponse);
		});
	};

	this.getRelationshipCategories = function( f ){
		model.RelationshipTypeCategory
		  .find({})
		  .exec(function(err, relCats){
			  return  (err) ? f ( err, null ) : f(null, relCats);
		  });
	};


	////////  Relationship Type ////////
	////////  Relationship Type ////////
	this.saveRelationshipType = function(rtype, f){
		var relType = new model.RelationshipType(rtype);
		relType.save( f );
	};

	this.getRelationshipType = function(rtypeId, f){
		var rt  = model.RelationshipType.findOne({id: rtypeId})
		  .populate('parent')
		  .populate('category')
		  .populate('reciprocalRelationship')
		  .exec(function(err, rtype){
			  return  (err) ? f ( err, null ) : f(null, rtype);
		  })
	};


	//////  Item Category //////
	//////  Item Category //////
	this.saveItemCategory = function(icat, f){
		model.ItemTypeCategory.update({_id : icat.id}, icat, {upsert: true},function(err,numAffected, rawResponse){
			return (err) ? f(err, null) : f(null, rawResponse);
		});
	};

	this.getItemCategories = function( f ){
		model.ItemTypeCategory
		  .find({})
		  .exec(function(err, iCats){
			  return  (err) ? f ( err, null ) : f(null, iCats);
		  });
	};

	//////  ItemType  //////
	//////  ItemType  //////
	this.saveItemType = function(it, f){
		model.ItemType.update({_id : it.id}, it, {upsert: true},function(err,numAffected, rawResponse){


			//TODO: Must return updated itemType

			return (err) ? f(err, null) : f(null, it);
		});
	};

	this.getItemType = function(itypeId, f){
		model.ItemType.findOne({id:itypeId}).exec(f);
	};
	//////  Item  //////
	//////  Item  //////
	this.saveItem = function(it, f){
		model.Item.update({_id : it.id}, it, {upsert: true},function(err,numAffected, rawResponse){
			return (err) ? f(err, null) : f(null, rawResponse);
		});
	};

	this.getItem = function(itemId, f){
		model.Item.findOne({id:itemId})
		  .populate('type')
		  .populate('relationships')
		  .exec(f);
	};

	//////  ViewItem  //////
	//////  ViewItem  //////
	this.getViewItem = function( vitemId, f ){
		var vi  = model.ViewItem.findOne({id: vitemId})
		  .populate('item')
		  .exec(function(err, vitem){
			  return  (err) ? f ( err, null ) : f(null, vitem);
		  })
	};

	this.updateViewItemPosition = function( vitemId, x, y ,f ){

	};

	/////////// EXPORTS ////////////
	/////////// EXPORTS ////////////

	exports.saveRelationshipCategory = this.saveRelationshipCategory;
	exports.getRelationshipCategories = this.getRelationshipCategories;

	exports.saveRelationshipType = this.saveRelationshipType;
	exports.getRelationshipType = this.getRelationshipType;

	exports.saveRelationship = this.saveRelationship;
	exports.getRelationship = this.getRelationship;

	exports.saveItemType = this.saveItemType;
	exports.getItemType = this.getItemType;

	exports.saveItem = this.saveItem;
	exports.getItem = this.getItem;

	exports.saveViewItem = this.saveViewItem;
	exports.getViewItem = this.getViewItem;

	exports.saveView = this.saveView;
	exports.getView = this.getView;

	exports.updateViewItemPosition = this.updateViewItemPosition;
})(require("./model.js"), require("xtend"));
